load "files";
load "downloader";

class Managers {
    Managers(logger) {
        this.foundPackages = [];
        this.logger = logger;
    }

    checkDir() {
        if (fexists("marn")) {
            this.findPackages();
        } else {
            fmkdir("marn");
            say "making dir.";
        }
    }

    findPackages() {
        this.foundPackages = flistDir("marn");
        return this.foundPackages;
    }

    finishedDownload(percentage, downloadedSize, totalSize) {
//        say "percentage: " + percentage + "%, downloadedSize: " + downloadedSize + ", totalSize: " + totalSize;
//        this.logger.out("-" * 10);
        say getType(percentage);
        let downloaded = "#" * (percentage / 10);
        let left = "-" * (10 - (percentage / 10));
        this.logger.replaceLine(downloaded + left);
    }

    downloader(link, path) {
        download(link, "./marn/" + path + ".mni", this.finishedDownload);
    }

}
