load "downloader";
load "std";

class Manager {
    Manager( ) {
        this.home = "./marn/";
    }

    marnExists( ) {
        return fexists( this.home );
    }

    createDir( dirName ) {
        if (fexists( dirName )) {
            return false;
        }
        fmkdir( dirName );
        return true;
    }

    downloader( package, url ) {
        if ( this.checkURL( url ) ) {
            this.createDir( this.home + "/" + package );
            download(url, this.home + package + "/" + package + ".mni");
            this.writeToFile( package );
        }
    }

    checkURL( url ) {
        return urlExists( url );
    }

    internal writeToFile( filename ) {
        this.createDir( this.home + filename );
        let path = "./" + filename + "/" + filename + ".mni";
        let handlerFile = this.home + "imports.mni";
        let lines = [];
        if (fexists( handlerFile )) {
            lines = split(fread( handlerFile ), "\n");
        }
        let importStatement = 'load "' + path + '";' + NL;
        lines.add(importStatement);
        let File = fopen(handlerFile);
        fwrite(File, "", "w");  // Making the file empty.
        for (line : lines) {
            fwrite(File, line, "A");
        }
    }
}